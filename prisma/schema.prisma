generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model author {
  profile          Json
  read_email_count BigInt
  sent_email_count BigInt
  open_email_count BigInt
  is_registered    Boolean
  rowid            String      @id(map: "author___pkey")
  email            email[]
  issue            issue[]
  recipient        recipient[]
  topic            topic[]
}

model email {
  subject         String
  body            String
  topic_list      String[]
  open_count      BigInt
  clipboard_count BigInt
  send_count      BigInt
  read_count      Json
  recipient_list  String[]
  rowid           String   @id(map: "email___pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  added_by        String
  author          author   @relation(fields: [added_by], references: [rowid], onDelete: NoAction, map: "added_by___fkey")
  issue           issue[]
}

model issue {
  type        String
  description String
  rowid       String @id(map: "issue___pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email_id    String @db.Uuid
  added_by    String
  author      author @relation(fields: [added_by], references: [rowid], onDelete: NoAction, map: "added_by___fkey")
  email       email  @relation(fields: [email_id], references: [rowid], onDelete: NoAction, map: "email_id___fkey")
}

model recipient {
  address          String   @id(map: "recipient___pkey")
  email_open_count BigInt
  email_read_count BigInt
  email_sent_count BigInt
  added_by         String
  email_count      BigInt
  last_updated     DateTime @db.Timestamp(6)
  author           author   @relation(fields: [added_by], references: [rowid], onDelete: NoAction, map: "added_by___fkey")
}

model topic {
  name             String   @id(map: "topic___pkey")
  email_count      BigInt
  last_updated     DateTime @db.Timestamp(6)
  email_open_count BigInt
  email_read_count BigInt
  email_sent_count BigInt
  added_by         String
  author           author   @relation(fields: [added_by], references: [rowid], onDelete: NoAction, map: "added_by___fkey")
}
